/*函数指针和回调函数
1.函数指针
函数的二级制代码存放在内存代码区，函数的地址是它在内存中的起始地址。如果把函数的地址作为参数传递给函数，就可以在函数中灵活调用其它函数
使用函数指针的三个步骤：
    1）声明函数指针
        声明函数指针的时候，必须提供函数的类型，函数的类型是指函数的返回值和参数列表（函数名和形参名不是）
        int (*pf指针名)(参数列表)
    2）让函数指针指向函数的地址
    3）通过函数指针调用函数
2.函数指针的引用场景（回调函数）

*/

#include<iostream>

void func1(){

    std::cout<<"func1函数"<<std::endl;
}

void func2(){

    std::cout<<"func2函数"<<std::endl;
}

//回调函数
void show(void (*pf)()){

    pf();
}

int main(){

    show(func1);
    std::cout<<"-----------------"<<std::endl;
    show(func2);

    return 0;
}
